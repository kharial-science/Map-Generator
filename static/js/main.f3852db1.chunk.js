(window["webpackJsonpmap-generator"]=window["webpackJsonpmap-generator"]||[]).push([[0],{11:function(e,t,a){e.exports=a(19)},16:function(e,t,a){},19:function(e,t,a){"use strict";a.r(t);var n=a(6),l=a(3),r=a(4),o=a(7),i=a(5),c=a(1),m=a(8),s=a(0),u=a.n(s),d=a(10),h=a.n(d);a(16);var p=function(e){return u.a.createElement("div",{className:"chunk ".concat(e.biome," ").concat(e.status),style:e.color?{backgroundColor:e.color}:void 0})},b=a(2),f=a.n(b);function v(e){var t=f.a.cloneDeep(e),a=0,n=!0,l=!1,r=void 0;try{for(var o,i=function(){var n=o.value,l=0,r=!0,i=!1,c=void 0;try{for(var m,s=n[Symbol.iterator]();!(r=(m=s.next()).done);r=!0){var u=m.value;if(u&&"expanding"===u.status){[[1,0],[0,1],[-1,0],[0,-1]].forEach(function(n){if(Math.random()<=.75&&a+n[0]>=0&&a+n[0]<e.length&&l+n[1]>=0&&l+n[1]<e.length&&(!t[a+n[0]][l+n[1]]||!t[a+n[0]][l+n[1]].biome))try{t[a+n[0]][l+n[1]]={biome:e[a][l].biome.slice(),status:"expanding"}}catch(r){}t[a][l].status="done"}),[[1,1],[1,-1],[-1,-1],[-1,1]].forEach(function(n){if(Math.random()<=.3&&a+n[0]>=0&&a+n[0]<e.length&&l+n[1]>=0&&l+n[1]<e.length&&(!t[a+n[0]][l+n[1]]||!t[a+n[0]][l+n[1]].biome))try{t[a+n[0]][l+n[1]]={biome:e[a][l].biome.slice(),status:"expanding"}}catch(r){}t[a][l].status="done"})}l++}}catch(d){i=!0,c=d}finally{try{r||null==s.return||s.return()}finally{if(i)throw c}}a++},c=e[Symbol.iterator]();!(n=(o=c.next()).done);n=!0)i()}catch(m){l=!0,r=m}finally{try{n||null==c.return||c.return()}finally{if(l)throw r}}return t}function y(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:40,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"chunkArray",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:["ocean","ocean","ocean","plains","plains","plains"],n=new Array(e).fill(null),l=new Array(e).fill(null).map(function(){return n.slice()});a.length>=1;){var r=k(e),o=r.x,i=r.y;l[o][i]={biome:a.pop(),status:"expanding"}}return"map"===t?l:C(l)}function E(e){var t=f.a.cloneDeep(e),a=0,n=!0,l=!1,r=void 0;try{for(var o,i=function(){var n=o.value,l=0,r=!0,i=!1,c=void 0;try{for(var m,s=n[Symbol.iterator]();!(r=(m=s.next()).done);r=!0){m.value||function(){var n=[];[[1,0],[0,1],[-1,0],[0,-1]].forEach(function(t){try{e[a+t[0]][l+t[1]].biome&&n.push(e[a+t[0]][l+t[1]].biome)}catch(r){}}),n[0]&&(t[a][l]={biome:n[Math.floor(Math.random()*n.length)],status:"done"})}(),l++}}catch(u){i=!0,c=u}finally{try{r||null==s.return||s.return()}finally{if(i)throw c}}a++},c=e[Symbol.iterator]();!(n=(o=c.next()).done);n=!0)i()}catch(m){l=!0,r=m}finally{try{n||null==c.return||c.return()}finally{if(l)throw r}}return t}function k(e){return{x:Math.floor(Math.random()*e),y:Math.floor(Math.random()*e)}}function C(e){var t,a=[];return a=(t=a).concat.apply(t,Object(n.a)(e))}var g=function(e){var t=C(e.map),a=-1,n=t.map(function(t){return a++,u.a.createElement(p,{key:a,biome:t?t.biome:null,color:t?e.biomes.find(function(e){return e.name===t.biome}).color:null,status:t?t.status:null})});return u.a.createElement("div",{className:"map-container"},u.a.createElement("div",{className:"map",style:{gridTemplateColumns:"repeat(".concat(Math.round(Math.sqrt(t.length)),", 1fr)"),gridTemplateRows:"repeat(".concat(Math.round(Math.sqrt(t.length)),", 1fr)")},onClick:function(){return e.onClick()}},n))},N=function(e){function t(e){return Object(l.a)(this,t),Object(o.a)(this,Object(i.a)(t).call(this,e))}return Object(m.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){return u.a.createElement("div",{className:"biome-selector"},u.a.createElement("div",{className:"label-container"},u.a.createElement("label",null,"Nom du biome",u.a.createElement("input",{className:"biome-name-input",type:"text",defaultValue:this.props.name}))),u.a.createElement("div",{className:"label-container"},u.a.createElement("label",null,"Couleur du biome",u.a.createElement("input",{className:"biome-color-input",type:"color",defaultValue:this.props.color}))),u.a.createElement("div",{className:"label-container"},u.a.createElement("label",null,"Nombre",u.a.createElement("input",{className:"biome-number-input",type:"number",defaultValue:this.props.number}))))}}]),t}(s.Component);var M=function(e,t,a){var n=a.createElement("a");n.setAttribute("href","data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(f.a.toPlainObject(t),null,"  "))),n.setAttribute("download","".concat(e,".json")),n.style.display="none",a.body.appendChild(n),n.click(),a.body.removeChild(n)};var j=function(e){var t=[];return e.forEach(function(e){for(var a=0;a<parseInt(e.number,10);a++)t.push(e.name)}),t},x=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(o.a)(this,Object(i.a)(t).call(this,e))).state={mapWidth:40,map:y(a.mapWidth,"map"),biomes:[{name:"ocean",color:"#add8e6",number:3},{name:"plains",color:"#90ee90",number:2}]},a.handleMapClick=a.handleMapClick.bind(Object(c.a)(a)),a.handleSaveClick=a.handleSaveClick.bind(Object(c.a)(a)),a.handleReRenderClick=a.handleReRenderClick.bind(Object(c.a)(a)),a.handleAddBiomeClick=a.handleAddBiomeClick.bind(Object(c.a)(a)),a.handleFixMapClick=a.handleFixMapClick.bind(Object(c.a)(a)),a}return Object(m.a)(t,e),Object(r.a)(t,[{key:"handleAddBiomeClick",value:function(){var e=Object(n.a)(this.state.biomes);e.push({name:"nom",color:"couleur",number:0}),this.setState({biomes:e})}},{key:"handleMapClick",value:function(){this.setState({map:v(this.state.map)})}},{key:"handleFixMapClick",value:function(){this.setState({map:E(this.state.map)})}},{key:"handleSaveClick",value:function(){M("Map (".concat(this.state.mapWidth,")"),this.state.map,document)}},{key:"handleReRenderClick",value:function(){var e=this,t=[];Array.from(document.getElementsByClassName("biome-selector")).forEach(function(e){t.push({name:e.getElementsByClassName("biome-name-input")[0].value,color:e.getElementsByClassName("biome-color-input")[0].value,number:e.getElementsByClassName("biome-number-input")[0].value})}),this.setState({mapWidth:parseInt(document.getElementById("map-dimensions").value,10),biomes:t},function(){console.log(),e.setState({map:y(e.state.mapWidth,"map",j(e.state.biomes))})})}},{key:"render",value:function(){var e=this,t=-1,a=Array.from(this.state.biomes).map(function(e){return t++,u.a.createElement(N,{key:t,name:e.name,color:e.color,number:e.number})});return u.a.createElement("div",{className:"main-grid"},u.a.createElement("div",{className:"header"},u.a.createElement("h1",null,"Hello World !"),u.a.createElement("p",null,"Here is the kfs prototype to map generation")),u.a.createElement(g,{map:this.state.map,biomes:this.state.biomes,onClick:function(){return e.handleMapClick()}}),u.a.createElement("div",{className:"map-infos"},u.a.createElement("div",{className:"label-container"},u.a.createElement("label",{className:"map-dimensions-label"},"Dimension",u.a.createElement("input",{id:"map-dimensions",type:"number",defaultValue:this.state.mapWidth}))),u.a.createElement("div",{className:"button-container"},u.a.createElement("button",{className:"fixMapButton",onClick:this.handleFixMapClick},"fix map")),u.a.createElement("div",{className:"button-container"},u.a.createElement("button",{className:"saveButton",onClick:this.handleSaveClick},"save")),u.a.createElement("div",{className:"button-container"},u.a.createElement("button",{className:"reRenderButton",onClick:this.handleReRenderClick},"re-render"))),u.a.createElement("div",{className:"map-biomes"},a,u.a.createElement("div",{className:"button-container"},u.a.createElement("button",{onClick:this.handleAddBiomeClick},"Ajouter un biome"))))}}]),t}(s.Component);h.a.render(u.a.createElement(x,null),document.getElementById("root"))}},[[11,1,2]]]);
//# sourceMappingURL=main.f3852db1.chunk.js.map